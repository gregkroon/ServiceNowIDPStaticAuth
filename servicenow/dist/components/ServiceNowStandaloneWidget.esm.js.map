{"version":3,"file":"ServiceNowStandaloneWidget.esm.js","sources":["../../src/components/ServiceNowStandaloneWidget.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useApi, identityApiRef, discoveryApiRef } from '@backstage/core-plugin-api';\nimport { useAsync } from 'react-use';\nimport { Incident, ServiceNowIncidentsTable } from './ServiceNowIncidentsTable';\n\ntype ServiceNowWidgetProps = {\n  stateFilter: string;\n  descriptionFilter: string;\n};\n\nexport const ServiceNowStandaloneWidget = (props: ServiceNowWidgetProps) => {\n  const { stateFilter, descriptionFilter } = props;\n  const identityApi = useApi(identityApiRef);\n  const discoveryApi = useApi(discoveryApiRef);\n\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n\n  const { value, loading, error } = useAsync(\n    async (): Promise<{ incidents: Incident[]; totalCount: number }> => {\n      const { token } = await identityApi.getCredentials();\n      const proxyBaseUrl = await discoveryApi.getBaseUrl('proxy');\n      \n      let query = stateFilter;\n      if (descriptionFilter) {\n        query += `^short_descriptionLIKE${descriptionFilter}`;\n      }\n\n      const fields = 'sys_id,number,short_description,state,priority,opened_at';\n      const offset = page * pageSize;\n\n      const url = `${proxyBaseUrl}/servicenow/api/now/table/incident?sysparm_query=${query}&sysparm_fields=${fields}&sysparm_limit=${pageSize}&sysparm_offset=${offset}`;\n\n      const response = await fetch(url, { headers: { Authorization: `Bearer ${token}` } });\n\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`Failed to fetch: ${response.status} ${response.statusText} - ${text}`);\n      }\n      const totalCount = parseInt(response.headers.get('X-Total-Count') || '0', 10);\n      const data = (await response.json()) as { result?: Incident[] };\n      return { incidents: data.result ?? [], totalCount };\n    },\n    [identityApi, discoveryApi, stateFilter, descriptionFilter, page, pageSize],\n  );\n\n  return (\n    <ServiceNowIncidentsTable\n      title=\"Incidents\"\n      loading={loading}\n      error={error}\n      incidents={value?.incidents || []}\n      page={page}\n      onPageChange={setPage}\n      pageSize={pageSize}\n      onRowsPerPageChange={setPageSize}\n      totalCount={value?.totalCount || 0}\n    />\n  );\n};"],"names":[],"mappings":";;;;;;AAUO,MAAM,0BAAA,GAA6B,CAAC,KAAA,KAAiC;AAC1E,EAAA,MAAM,EAAE,WAAA,EAAa,iBAAA,EAAkB,GAAI,KAAA;AAC3C,EAAA,MAAM,WAAA,GAAc,OAAO,cAAc,CAAA;AACzC,EAAA,MAAM,YAAA,GAAe,OAAO,eAAe,CAAA;AAE3C,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAI,SAAS,CAAC,CAAA;AAClC,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,SAAS,CAAC,CAAA;AAE1C,EAAA,MAAM,EAAE,KAAA,EAAO,OAAA,EAAS,KAAA,EAAM,GAAI,QAAA;AAAA,IAChC,YAAoE;AAClE,MAAA,MAAM,EAAE,KAAA,EAAM,GAAI,MAAM,YAAY,cAAA,EAAe;AACnD,MAAA,MAAM,YAAA,GAAe,MAAM,YAAA,CAAa,UAAA,CAAW,OAAO,CAAA;AAE1D,MAAA,IAAI,KAAA,GAAQ,WAAA;AACZ,MAAA,IAAI,iBAAA,EAAmB;AACrB,QAAA,KAAA,IAAS,yBAAyB,iBAAiB,CAAA,CAAA;AAAA;AAGrD,MAAA,MAAM,MAAA,GAAS,0DAAA;AACf,MAAA,MAAM,SAAS,IAAA,GAAO,QAAA;AAEtB,MAAA,MAAM,GAAA,GAAM,CAAA,EAAG,YAAY,CAAA,iDAAA,EAAoD,KAAK,mBAAmB,MAAM,CAAA,eAAA,EAAkB,QAAQ,CAAA,gBAAA,EAAmB,MAAM,CAAA,CAAA;AAEhK,MAAA,MAAM,QAAA,GAAW,MAAM,KAAA,CAAM,GAAA,EAAK,EAAE,OAAA,EAAS,EAAE,aAAA,EAAe,CAAA,OAAA,EAAU,KAAK,CAAA,CAAA,EAAG,EAAG,CAAA;AAEnF,MAAA,IAAI,CAAC,SAAS,EAAA,EAAI;AAChB,QAAA,MAAM,IAAA,GAAO,MAAM,QAAA,CAAS,IAAA,EAAK;AACjC,QAAA,MAAM,IAAI,KAAA,CAAM,CAAA,iBAAA,EAAoB,QAAA,CAAS,MAAM,IAAI,QAAA,CAAS,UAAU,CAAA,GAAA,EAAM,IAAI,CAAA,CAAE,CAAA;AAAA;AAExF,MAAA,MAAM,UAAA,GAAa,SAAS,QAAA,CAAS,OAAA,CAAQ,IAAI,eAAe,CAAA,IAAK,KAAK,EAAE,CAAA;AAC5E,MAAA,MAAM,IAAA,GAAQ,MAAM,QAAA,CAAS,IAAA,EAAK;AAClC,MAAA,OAAO,EAAE,SAAA,EAAW,IAAA,CAAK,MAAA,IAAU,IAAI,UAAA,EAAW;AAAA,KACpD;AAAA,IACA,CAAC,WAAA,EAAa,YAAA,EAAc,WAAA,EAAa,iBAAA,EAAmB,MAAM,QAAQ;AAAA,GAC5E;AAEA,EAAA,uBACE,GAAA;AAAA,IAAC,wBAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAM,WAAA;AAAA,MACN,OAAA;AAAA,MACA,KAAA;AAAA,MACA,SAAA,EAAW,KAAA,EAAO,SAAA,IAAa,EAAC;AAAA,MAChC,IAAA;AAAA,MACA,YAAA,EAAc,OAAA;AAAA,MACd,QAAA;AAAA,MACA,mBAAA,EAAqB,WAAA;AAAA,MACrB,UAAA,EAAY,OAAO,UAAA,IAAc;AAAA;AAAA,GACnC;AAEJ;;;;"}