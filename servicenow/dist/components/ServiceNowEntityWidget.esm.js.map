{"version":3,"file":"ServiceNowEntityWidget.esm.js","sources":["../../src/components/ServiceNowEntityWidget.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useApi, identityApiRef, discoveryApiRef } from '@backstage/core-plugin-api';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { useAsync } from 'react-use';\nimport { Incident, ServiceNowIncidentsTable } from './ServiceNowIncidentsTable';\nimport { InfoCard } from '@backstage/core-components';\nimport { Alert } from '@material-ui/lab'; // FIX: Imported Alert from the correct library\n\nconst SERVICENOW_QUERY_ANNOTATION = 'servicenow.com/query';\n\nexport const ServiceNowEntityWidget = () => {\n  const { entity } = useEntity();\n  const identityApi = useApi(identityApiRef);\n  const discoveryApi = useApi(discoveryApiRef);\n\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n\n  const query = entity.metadata.annotations?.[SERVICENOW_QUERY_ANNOTATION] ?? '';\n\n  // --- ADD THIS LINE FOR DEBUGGING ---\n  console.log(\n    `Widget loaded for entity: \"${entity.metadata.name}\", using query: \"${query}\"`,\n  );\n  // ------------------------------------\n\n  const { value, loading, error } = useAsync(\n    async (): Promise<{ incidents: Incident[]; totalCount: number } | null> => {\n      if (!query) return null;\n      const { token } = await identityApi.getCredentials();\n      const proxyBaseUrl = await discoveryApi.getBaseUrl('proxy');\n      const fields = 'sys_id,number,short_description,state,priority,opened_at';\n      const offset = page * pageSize;\n      const url = `${proxyBaseUrl}/servicenow/api/now/table/incident?sysparm_query=${query}&sysparm_fields=${fields}&sysparm_limit=${pageSize}&sysparm_offset=${offset}`;\n\n      const response = await fetch(url, { headers: { Authorization: `Bearer ${token}` } });\n      if (!response.ok) {\n        const text = await response.text();\n        throw new Error(`Failed to fetch: ${response.status} ${response.statusText} - ${text}`);\n       }\n      const totalCount = parseInt(response.headers.get('X-Total-Count') || '0', 10);\n      const data = (await response.json()) as { result?: Incident[] };\n      return { incidents: data.result ?? [], totalCount };\n    },\n    [identityApi, discoveryApi, query, page, pageSize],\n  );\n\n  if (!query) {\n    return (\n      <InfoCard title=\"ServiceNow Incidents\">\n        <Alert severity=\"info\">\n          To display incidents, add the <b>'{SERVICENOW_QUERY_ANNOTATION}'</b> annotation to this component's catalog-info.yaml file.\n        </Alert>\n      </InfoCard>\n    );\n  }\n  \n  return (\n    <ServiceNowIncidentsTable\n      title={`Incidents for \"${entity.metadata.name}\"`}\n      loading={loading}\n      error={error}\n      incidents={value?.incidents || []}\n      page={page}\n      onPageChange={setPage}\n      pageSize={pageSize}\n      onRowsPerPageChange={setPageSize}\n      totalCount={value?.totalCount || 0}\n    />\n  );\n};"],"names":[],"mappings":";;;;;;;;;AAQA,MAAM,2BAAA,GAA8B,sBAAA;AAE7B,MAAM,yBAAyB,MAAM;AAC1C,EAAA,MAAM,EAAE,MAAA,EAAO,GAAI,SAAA,EAAU;AAC7B,EAAA,MAAM,WAAA,GAAc,OAAO,cAAc,CAAA;AACzC,EAAA,MAAM,YAAA,GAAe,OAAO,eAAe,CAAA;AAE3C,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAI,SAAS,CAAC,CAAA;AAClC,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAI,SAAS,CAAC,CAAA;AAE1C,EAAA,MAAM,KAAA,GAAQ,MAAA,CAAO,QAAA,CAAS,WAAA,GAAc,2BAA2B,CAAA,IAAK,EAAA;AAG5E,EAAA,OAAA,CAAQ,GAAA;AAAA,IACN,CAAA,2BAAA,EAA8B,MAAA,CAAO,QAAA,CAAS,IAAI,oBAAoB,KAAK,CAAA,CAAA;AAAA,GAC7E;AAGA,EAAA,MAAM,EAAE,KAAA,EAAO,OAAA,EAAS,KAAA,EAAM,GAAI,QAAA;AAAA,IAChC,YAA2E;AACzE,MAAA,IAAI,CAAC,OAAO,OAAO,IAAA;AACnB,MAAA,MAAM,EAAE,KAAA,EAAM,GAAI,MAAM,YAAY,cAAA,EAAe;AACnD,MAAA,MAAM,YAAA,GAAe,MAAM,YAAA,CAAa,UAAA,CAAW,OAAO,CAAA;AAC1D,MAAA,MAAM,MAAA,GAAS,0DAAA;AACf,MAAA,MAAM,SAAS,IAAA,GAAO,QAAA;AACtB,MAAA,MAAM,GAAA,GAAM,CAAA,EAAG,YAAY,CAAA,iDAAA,EAAoD,KAAK,mBAAmB,MAAM,CAAA,eAAA,EAAkB,QAAQ,CAAA,gBAAA,EAAmB,MAAM,CAAA,CAAA;AAEhK,MAAA,MAAM,QAAA,GAAW,MAAM,KAAA,CAAM,GAAA,EAAK,EAAE,OAAA,EAAS,EAAE,aAAA,EAAe,CAAA,OAAA,EAAU,KAAK,CAAA,CAAA,EAAG,EAAG,CAAA;AACnF,MAAA,IAAI,CAAC,SAAS,EAAA,EAAI;AAChB,QAAA,MAAM,IAAA,GAAO,MAAM,QAAA,CAAS,IAAA,EAAK;AACjC,QAAA,MAAM,IAAI,KAAA,CAAM,CAAA,iBAAA,EAAoB,QAAA,CAAS,MAAM,IAAI,QAAA,CAAS,UAAU,CAAA,GAAA,EAAM,IAAI,CAAA,CAAE,CAAA;AAAA;AAExF,MAAA,MAAM,UAAA,GAAa,SAAS,QAAA,CAAS,OAAA,CAAQ,IAAI,eAAe,CAAA,IAAK,KAAK,EAAE,CAAA;AAC5E,MAAA,MAAM,IAAA,GAAQ,MAAM,QAAA,CAAS,IAAA,EAAK;AAClC,MAAA,OAAO,EAAE,SAAA,EAAW,IAAA,CAAK,MAAA,IAAU,IAAI,UAAA,EAAW;AAAA,KACpD;AAAA,IACA,CAAC,WAAA,EAAa,YAAA,EAAc,KAAA,EAAO,MAAM,QAAQ;AAAA,GACnD;AAEA,EAAA,IAAI,CAAC,KAAA,EAAO;AACV,IAAA,2BACG,QAAA,EAAA,EAAS,KAAA,EAAM,wBACd,QAAA,kBAAA,IAAA,CAAC,KAAA,EAAA,EAAM,UAAS,MAAA,EAAO,QAAA,EAAA;AAAA,MAAA,gCAAA;AAAA,2BACU,GAAA,EAAA,EAAE,QAAA,EAAA;AAAA,QAAA,GAAA;AAAA,QAAE,2BAAA;AAAA,QAA4B;AAAA,OAAA,EAAC,CAAA;AAAA,MAAI;AAAA,KAAA,EACtE,CAAA,EACF,CAAA;AAAA;AAIJ,EAAA,uBACE,GAAA;AAAA,IAAC,wBAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAO,CAAA,eAAA,EAAkB,MAAA,CAAO,QAAA,CAAS,IAAI,CAAA,CAAA,CAAA;AAAA,MAC7C,OAAA;AAAA,MACA,KAAA;AAAA,MACA,SAAA,EAAW,KAAA,EAAO,SAAA,IAAa,EAAC;AAAA,MAChC,IAAA;AAAA,MACA,YAAA,EAAc,OAAA;AAAA,MACd,QAAA;AAAA,MACA,mBAAA,EAAqB,WAAA;AAAA,MACrB,UAAA,EAAY,OAAO,UAAA,IAAc;AAAA;AAAA,GACnC;AAEJ;;;;"}